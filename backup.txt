<?php
// This is our menu.php file that will be accessible to clients
include 'components/config.php';
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Our Menu | <?php include 'components/title.php'; ?></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="css/styles.css">
    <style>
        .menu-card {
            transition: transform 0.3s ease;
            height: 100%;
        }
        .menu-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        }
        .menu-image {
            height: 200px;
            object-fit: cover;
        }
        .menu-price {
            font-size: 1.25rem;
            font-weight: bold;
            color: #dc3545;
        }
        .menu-filter-buttons {
            margin-bottom: 30px;
        }
        .loading-spinner {
            display: flex;
            justify-content: center;
            padding: 50px 0;
        }
        #menuContainer {
            min-height: 300px;
        }
        .no-items-found {
            text-align: center;
            padding: 50px 0;
            color: #6c757d;
        }
    </style>
</head>
<body>
    <!-- Include your website header -->
    <?php include 'components/header.php'; ?>

    <div class="container my-5">
        <div class="row mb-4">
            <div class="col-12 text-center">
                <h1 class="display-4">Our Delicious Menu</h1>
                <p class="lead">Explore our carefully crafted dishes made with the freshest ingredients</p>
            </div>
        </div>

        <!-- Optional: Add search and filter functionality -->
        <div class="row mb-4">
            <div class="col-md-6 mb-3 mb-md-0">
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-search"></i></span>
                    <input type="text" id="menuSearch" class="form-control" placeholder="Search our menu...">
                </div>
            </div>
            <div class="col-md-6 text-md-end">
                <div class="btn-group menu-filter-buttons" role="group">
                    <button type="button" class="btn btn-outline-primary active" data-filter="all">All Items</button>
                    <button type="button" class="btn btn-outline-primary" data-filter="price-asc">Price: Low to High</button>
                    <button type="button" class="btn btn-outline-primary" data-filter="price-desc">Price: High to Low</button>
                </div>
            </div>
        </div>
        
        <!-- Menu content will be loaded here -->
        <div id="menuContainer" class="row g-4">
            <div class="loading-spinner">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Include your website footer -->
    <?php include 'components/footer.php'; ?>
    
    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        // Fetch menu items on page load
        fetchMenuItems();
        
        // Search functionality
        const searchInput = document.getElementById('menuSearch');
        searchInput.addEventListener('input', function() {
            filterMenuItems();
        });
        
        // Filter buttons
        const filterButtons = document.querySelectorAll('.btn-group button');
        filterButtons.forEach(button => {
            button.addEventListener('click', function() {
                // Remove active class from all buttons
                filterButtons.forEach(btn => btn.classList.remove('active'));
                // Add active class to clicked button
                this.classList.add('active');
                // Filter items
                filterMenuItems();
            });
        });
    });
    
    // Global variable to store all menu items
    let allMenuItems = [];
    
    // Fetch menu items from API
    function fetchMenuItems() {
        fetch('api/get_menu.php')
            .then(response => response.json())
            .then(data => {
                allMenuItems = data;
                displayMenuItems(data);
            })
            .catch(error => {
                console.error('Error fetching menu items:', error);
                document.getElementById('menuContainer').innerHTML = 
                    '<div class="col-12"><div class="alert alert-danger">Error loading menu items. Please try again later.</div></div>';
            });
    }
    
    // Display menu items
    function displayMenuItems(items) {
        const menuContainer = document.getElementById('menuContainer');
        
        // Clear the container
        menuContainer.innerHTML = '';
        
        if (items.length === 0) {
            menuContainer.innerHTML = '<div class="col-12 no-items-found"><i class="fas fa-utensils fa-3x mb-3"></i><h3>No menu items found</h3><p>Try a different search term</p></div>';
            return;
        }
        
        // Loop through items and create cards
        items.forEach(item => {
            const card = createMenuCard(item);
            menuContainer.appendChild(card);
        });
    }
    
    // Create a menu card element
    function createMenuCard(item) {
        const col = document.createElement('div');
        col.className = 'col-md-6 col-lg-4';
        
        const imageUrl = item.image ? 'uploads/menu/' + item.image : 'images/default-food.jpg';
        
        col.innerHTML = `
            <div class="card menu-card">
                <img src="${imageUrl}" class="card-img-top menu-image" alt="${item.menu_name}">
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title">${item.menu_name}</h5>
                    <p class="card-text flex-grow-1">${item.menu_description}</p>
                    <div class="d-flex justify-content-between align-items-center mt-3">
                        <span class="menu-price">$${parseFloat(item.price).toFixed(2)}</span>
                        <button class="btn btn-sm btn-outline-primary order-button" data-id="${item.menu_id}">
                            <i class="fas fa-shopping-cart me-1"></i> Add to Order
                        </button>
                    </div>
                </div>
            </div>
        `;
        
        // Add event listener for order button if needed
        const orderButton = col.querySelector('.order-button');
        orderButton.addEventListener('click', function() {
            // Implement your order functionality here
            alert(`Added ${item.menu_name} to your order!`);
        });
        
        return col;
    }
    
    // Filter menu items based on search input and filter selection
    function filterMenuItems() {
        const searchTerm = document.getElementById('menuSearch').value.toLowerCase();
        const activeFilter = document.querySelector('.btn-group button.active').getAttribute('data-filter');
        
        // Filter by search term
        let filteredItems = allMenuItems.filter(item => 
            item.menu_name.toLowerCase().includes(searchTerm) || 
            item.menu_description.toLowerCase().includes(searchTerm)
        );
        
        // Apply sorting based on filter
        switch(activeFilter) {
            case 'price-asc':
                filteredItems.sort((a, b) => parseFloat(a.price) - parseFloat(b.price));
                break;
            case 'price-desc':
                filteredItems.sort((a, b) => parseFloat(b.price) - parseFloat(a.price));
                break;
            // Add more filter options as needed
        }
        
        // Display filtered items
        displayMenuItems(filteredItems);
    }
    </script>
</body>
</html>